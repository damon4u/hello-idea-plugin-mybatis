<idea-plugin>
    <id>com.damon4u.plugin.mybatis</id>
    <name>Nana-Mybatis</name>
    <version>1.0.0</version>
    <vendor email="damon_secret@163.com" url="https://github.com/damon4u/hello-idea-plugin-mybatis">damon4u</vendor>

    <description><![CDATA[
      An idea plugin for mybatis.<br>
      This Plugin is fork from https://github.com/wuzhizhan/free-idea-mybatis
    ]]></description>

    <change-notes><![CDATA[
      <ul>
      <li><b>1.0.0:</b>
        <br> Mybatis XML解析，根据id寻找对应resultMap，sql语句，实现点击跳转。
        <br> resultMap中property解析到bean中的属性，可以点击跳转和拼写错误提示。
        <br> mapper文件中sql语句，为dao方法参数（多个参数时@Param注解标记）添加引用。
        <br> mapper文件中if条件，为dao方法参数（多个参数时@Param注解标记）添加引用。
        <br> mapper文件中，写sql语句时#{}提示方法参数。
        <br> mapper文件中，写if条件查询时提示方法参数。
        <br> 在Java类或者方法行添加跳转到mapper的icon。
        <br> 在mapper文件中添加跳转到Java类的icon。
        <br> 检查mapper文件中的语句有没有对应的dao层方法。
        <br> 检查dao层方法有没有对应的mapper语句。
      </li>
      </ul>
    ]]>
    </change-notes>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
    <idea-version since-build="145"/>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <!-- uncomment to enable plugin in all products
    <depends>com.intellij.modules.lang</depends>
    -->

    <extensions defaultExtensionNs="com.intellij">
        <!-- Add your extensions here -->
        <!-- projectService -->
        <projectService serviceImplementation="com.damon4u.plugin.mybatis.service.JavaService"/>

        <!-- 解析xml文件，方便使用DOM读写 -->
        <dom.fileDescription implementation="com.damon4u.plugin.mybatis.dom.description.MapperDescription"/>

        <!-- mapper文件中sql语句，为dao方法参数（多个参数时@Param注解标记）添加引用 -->
        <psi.referenceContributor implementation="com.damon4u.plugin.mybatis.reference.SqlParamReferenceContributor"/>

        <!-- mapper文件中if条件，为dao方法参数（多个参数时@Param注解标记）添加引用 -->
        <psi.referenceContributor implementation="com.damon4u.plugin.mybatis.reference.TestParamReferenceContributor"/>

        <!-- mapper文件中，写test条件查询时提示方法参数 -->
        <completion.contributor language="XML"
                                implementationClass="com.damon4u.plugin.mybatis.completion.TestParamCompletionContributor"/>

        <!-- mapper文件中，写sql语句时#{}提示方法参数 -->
        <completion.contributor language="SQL"
                                implementationClass="com.damon4u.plugin.mybatis.completion.SqlParamCompletionContributor"
                                order="first"/>

        <!-- 在java类或者方法行添加跳转到mapper的icon -->
        <codeInsight.lineMarkerProvider language="JAVA"
                                        implementationClass="com.damon4u.plugin.mybatis.linemarker.DaoToXmlLineMarkerProvider"/>

        <!-- 在mapper文件中添加跳转到java类的icon -->
        <codeInsight.lineMarkerProvider language="XML"
                                        implementationClass="com.damon4u.plugin.mybatis.linemarker.XmlToDaoLineMarkerProvider"/>

        <!-- 检查mapper文件中的语句有没有对应的dao层方法 -->
        <localInspection language="XML" shortName="MybatisMapperXmlInspection" enabledByDefault="true" level="ERROR"
                         displayName="Mapper xml inspection"
                         groupName="Mybatis"
                         implementationClass="com.damon4u.plugin.mybatis.inspection.MapperXmlInspection"/>

        <!-- 检查dao层方法有没有对应的mapper语句 -->
        <localInspection language="JAVA" shortName="MybatisMapperMethodInspection"
                         displayName="Mapper method inspection"
                         groupName="Mybatis" enabledByDefault="true" level="ERROR"
                         implementationClass="com.damon4u.plugin.mybatis.inspection.MapperMethodInspection"/>


    </extensions>

    <actions>
        <!-- Add your actions here -->
    </actions>

</idea-plugin>